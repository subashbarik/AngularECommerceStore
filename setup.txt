Angular E-Commerce Site development setup in VS Code
------------------------------------------------------

In this project we are using VS Code as our editor for development , so we are using terminal in the VS code for create solution , projects etc. So we must know the dotnet commands for command line tool.

* dotnet new -l : lists different types of project templates .
* dotnet new classlib -o Core : Creates class library project in the folder Core inside the solution folder.
* donnet sln -add Core : Adds project Core to the current solution.
* dotnet add reference ../Core : Adds a reference of Core project to the current project , you should be in the current project in the command prompt.
* dotnet restore : run this command after adding project reference at the solution level.
* dotnet run : to run a project (must be inside the project folder)
* dotnet watch run : to run a project in watch mode (any file changes will be automatically detected and re-build and run).

Nuget Packages for projects
---------------------------
* SqLite (Infrastructure Project) - Database support
* StackExchange.Redis (Infrastructure Project) - For in memory database support for product cart.
* Microsoft.AspNetCore.Identity.EntityFramework (Core Project) - For aspnet Identity 
* Microsoft.AspNetCore.Identity (Infrastructure Project) - For Login etc.
* Microsoft.IdentityModel.Tokens (Infrastructure Project) - For tokens
* System.IdentityModel.Tokens.Jwt (Infrastructure Project) - For tokens serialization and de-serilization etc
* Stripe.net (Infrastructure Project) - For payment processing using stripe
Docker for Redis
----------------
* Install docker desktop from docker.com
* Docker container confguration is in the file docker-compose.yml
* Run the container using command 'docker-compose up --detach'

Stripe
---------
* Install stripe cli to listen to events for local machine testing , If there is a live API 
exposed (like in production) then it is not needed.
* Stripe url : stripe.com
Git and GitHub Setup
-----------------------
git init
git add README.md
git commit -m "first commit"
git branch -M master
git remote add origin https://github.com/subashbarik/AngularECommerceStore.git
git push -u origin master

Design setup
-------------
* Repository Pattern - For separetaion of Data Access logic from business logic
* Specification Pattern - To overcome problems of the Generic Repository Pattern
DI
---
* For repository classed used "AddScoped" because in this case objects created leaves for the life time of the HTTP Call. 
  "AddTransient" creates object for that method call only so it is very shot 
   and "AddSingleTon" is for the whole application lifetime so it is very long.

Angular Setup
--------------
* ng new AngularUI --strict false (New project with name AngularUI with strict mode off)
* Use version 11/12/13 for this course as ngx-bootstrap does not yet support version 14

UI Packages
------------
* Use ngx-bootstrap https://valor-software.com/ngx-bootstrap for styling.
* ng add ngx-bootstrap (first choice as it auto updates files like app.module.ts) / npm install ngx-bootstrap --save  - to install ngx-bootstrap , styling package developed by Angular team (ttps://valor-software.com/ngx-bootstrap)
* npm install bootstrap@5.2.0 - to install bootstrap version 5.2.0
* npm install font-awesome - to install font-awesome for icons
* toastr :  npm install ngx-toastr@14.3.0
* For loading page animation :npm install ngx-spinner@13.1.1 - https://www.npmjs.com/package/ngx-spinner#usage

Angular Packages used for VS Code
-----------------------------------
* Angular Language Service
* Angular Snippets



